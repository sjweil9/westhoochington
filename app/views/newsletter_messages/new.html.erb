<div class="container-fluid">
    <h1>Weekly Westhoochington Editorial Board</h1>
    <h5>
        To contribute to the newsletter, you need to select a category, and then provide a template string.
        A template string must contain certain anchors, marked like %{winner}.
        For example, the category "Narrowest Cucking of the Week", when the margin is "very narrow" (margin < 5 points) contains the string:
        "Quite the nail-biter this week, with %{winner} scraping by %{loser} by only %{margin} points."
        When the newsletter is generated, these anchors will get replaced by random nicknames or point values as appropriate.
        Toggle the section below to see the available categories and required anchor variables for each.
        Propose whatever you want; maximum trolling and mockery is encouraged.
        Selections will be weighted to favor contributions which have been used less times.
    </h5>
    <div class="row margin-below">
        <h3 class="col border-bottom">
            <img class="expand" data-toggle="collapse" data-target="#categories" aria-expanded="true" aria-controls="categories" src="<%= image_path('expand.png') %>" />Newsletter Categories
        </h3>
    </div>
    <div class="collapse" id="categories">
      <% NewsletterMessage::CATEGORIES.each do |_tag, object| %>
        <div class="margin-below">
          <h4><b><%= object[:label] %></b></h4>
          <h5>Variables: <%= object[:variables].map { |var| "%{#{var}}" }.join(', ') %></h5>
          <h5>Levels: <%= object[:levels].map { |level| "#{level[1]} (#{object[:direction]} #{level.last})" }.join(', ') %></h5>
        </div>
      <% end %>
    </div>
    <h1 class="margin-above">Add Newsletter Message</h1>
    <form action="<%= create_newsletter_message_path %>" method="post">
        <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
        <div class="form-group">
            <label for="category">Category</label>
            <select class="custom-select mr-sm-2" id="category" name="category">
              <% NewsletterMessage::CATEGORIES.each do |key, object| %>
                <option value="<%= key %>"><%= object[:label] %></option>
              <% end %>
            </select>
            <%= render "shared/errors", type: "category" %>
        </div>
        <div class="form-group">
            <label for="amount">Level</label>
            <select class="custom-select mr-sm-2" id="level" name="level">
              <% NewsletterMessage::CATEGORIES.dig(:high_score, :levels).each do |array| %>
                <option value="<%= array[0] %>"><%= array[1] %></option>
              <% end %>
            </select>
            <%= render "shared/errors", type: "amount" %>
        </div>
        <div class="form-group">
            <label for="max_takers">Template String</label>
            <input type="text" class="form-control" id="template_string" name="template_string" placeholder="Must contain <%= NewsletterMessage::CATEGORIES.dig(:high_score, :variables).map { |var| "%{#{var}}" }.join(', ') %>">
            <%= render "shared/errors", type: "max_takers" %>
        </div>
        <button type="submit" class="btn btn-primary">Add</button>
    </form>
</div>

<script>
  const categories = JSON.parse('<%= NewsletterMessage::CATEGORIES.to_json.html_safe %>');

  $('#category').on('change', function() {
    let current_selection = this.value;
    let level_selector = $('#level');
    level_selector.empty();
    let new_options = categories[current_selection]['levels'];
    new_options.forEach(option => {
      let element = $('<option></option>').attr('value', option[0]).text(option[1]);
      level_selector.append(element);
    });
    let variables = categories[current_selection]['variables'].map(val => {
      return `%{${val}}`;
    }).join(', ');
    let new_placeholder = `Must contain ${variables}`;
    $('#template_string').attr('placeholder', new_placeholder);
  })
</script>